# Generated by Django 3.2.9 on 2021-11-25 04:28

import django.contrib.auth.validators
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import user.models


def create_default_user(apps, edit_schema):
    user_model = apps.get_model('user', 'User')
    user_model.objects.create(is_superuser=True, username='nirav@devopsinternational.nl', first_name='Nirav',
                              last_name='Kukadiya', is_staff=True, is_active=True,email='nirav@devopsinternational.nl',)


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('state', '0001_initial'),
        ('city', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        ('language', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly assigning them.',
                                                     verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'},
                                              help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.',
                                              max_length=150, unique=True,
                                              validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                                              verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False,
                                                 help_text='Designates whether the user can log into this admin site.',
                                                 verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True,
                                                  help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.',
                                                  verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('hospital_name', models.CharField(max_length=250, null=True)),
                ('area', models.CharField(max_length=250, null=True)),
                ('pincode', models.CharField(max_length=20, null=True)),
                ('middle_name', models.CharField(max_length=150, null=True)),
                ('landline', models.CharField(max_length=15, null=True)),
                ('fax_number', models.CharField(max_length=15, null=True)),
                ('degree', models.CharField(max_length=250, null=True)),
                ('speciality', models.CharField(max_length=500, null=True)),
                ('aadhar_card', models.CharField(max_length=15, null=True)),
                ('registration_no', models.CharField(max_length=25, null=True)),
                ('designation', models.CharField(max_length=25, null=True)),
                ('created_by', models.IntegerField(default=1)),
                ('deleted', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('city',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='city.citymodel')),
                ('default_language', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                                       to='language.languagemodel')),
                ('groups', models.ManyToManyField(blank=True,
                                                  help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                                                  related_name='user_set', related_query_name='user', to='auth.Group',
                                                  verbose_name='groups')),
                ('hospital', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL,
                                               to=settings.AUTH_USER_MODEL)),
                ('state',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='state.statemodel')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                                                            related_name='user_set', related_query_name='user',
                                                            to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', user.models.UserManager()),
            ],
        ),
        # migrations.RunPython(create_default_user)
    ]
